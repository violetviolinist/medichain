/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace medichain.network

participant Customer identified by customerId {
  o String customerId
  o String firstName
  o String lastName
  o String phoneNumber
  o String bankAccount
  o String passportId
  o String country
  o Integer wallet
}

participant Hospital identified by hospitalId {
  o String hospitalId
  o String hospitalName
  o String address
  o String rating
  o Integer contingenciesProposed
  o Integer contingenciesValidated
  o String[] packageIds
  o String country
  o Integer wallet
}

participant MedicalProvider identified by providerId {
  o String providerId
  o String name
  o String address
  o String rating
  o String contingenciesProposed
  o String contingenciesValidated
  o String[] packageIds
  o String country
  o Integer wallet
}

participant IndependentValidator identified by IVId {
  o String IVId
  o String name
  o String address
  o String[] accreditations
  o Integer wallet
}

participant GovernmentValidator identified by GVId {
  o String GVId
  o String name
  o String address
  o Integer wallet
}

participant PublicServiceValidator identified by PSVId {
  o String PSVId
  o String name
  o String address
  o String[] accreditations
  o Integer wallet
}

// Definition of packages available by providers
asset Package identified by packageId {
  o String packageId
  o String name
  o String description
  o String category
  o String image
  o String[] requiredDocs
  o String[] fundamentalProcedureNames
  o Integer[] fundamentalProcedureCosts
  o String[] fundamentalProcedureTimes
  o String[] contingencyNames
  o String[] contingencyDescriptions
  o Integer[] contingencyCosts
  o String[] contingencyTimes
  o String[] unvalidatedContingencyNames
  o String[] unvalidatedContingencyDescriptions
  o Integer[] unvalidatedContingencyCosts
  o String[] unvalidatedContingencyTimes
  o Integer totalFundamentalCost
  o String totalFundamentalTime
  o String totalTime
  o Integer totalCost
  o String providerId
  o String providerType
  o String providerName
}

asset BoughtPackage identified by boughtPackageId {   // *Actual asset of a patient after he buys it
  o String boughtPackageId                            // packageId + customerId
  o String packageId
  o String providerId
  o String providerType
  o String providerName
  o String customerId
  o String customerName
  o Integer holdAmount                             // Amount temporarily held. Disbursed in steps. (Escrow)
  o Integer contingencyFund
  o Boolean[] patientStageStatus
  o Boolean[] providerStageStatus
  o Boolean[] patientContingencyStatus
  o Boolean[] providerContingencyStatus
  o Boolean[] patientUnvalidatedContingencyStatus
  o Boolean[] providerUnvalidatedContingencyStatus
  o String unverifiedStageName default = "-1"
  o String unverifiedContingencyName default = "-1"
  o String[] medicalRecords
  o String startDate
  o String currentStage
  o String[] fundamentalProcedureNames
  o Integer[] fundamentalProcedureCosts
  o String[] fundamentalProcedureTimes
  o String[] contingencyNames
  o String[] contingencyDescriptions
  o Integer[] contingencyCosts
  o String[] contingencyTimes
  o String[] unvalidatedContingencyNames
  o String[] unvalidatedContingencyDescriptions
  o Integer[] unvalidatedContingencyCosts
  o String[] unvalidatedContingencyTimes
}

// Complete the current stage of a customer's package (called by the MedicalProvider)
transaction CompleteStage {
  o String boughtPackageId
  o String stageName
}

// Verify the currently completed but unverified stage (called by Customer)
transaction VerifyStage {
  o String boughtPackageId
  o String stageName
}

// Customer buys package
transaction selectPackage {
  o String packageId
  o String startDate
}

// Validate an unvalidated contingency (called by third party validator)
transaction ValidateContingency {
  o String boughtPackageId
  o String contingencyName
}

// Reject a contingency (called by third party validator)
transaction RejectContingency {
  o String boughtPackageId
  o String contingencyName
}

// Raise a contingency procedure (called by provider) 
transaction RaiseContingency {
  o String boughtPackageId
  o String contingencyName
  o String contingencyDescription
  o Integer contingencyCost
  o String contingencyTime
}

// Complete one of the pre-defined contingencies (called by provider)
transaction CompleteContingency {
  o String boughtPackageId
  o String contingencyName
}

// Verify that contingency procedure has been performed
transaction VerifyContingency {
  o String boughtPackageId
  o String contingencyName
}

participant SampleParticipant identified by participantId {
  o String participantId
  o String firstName
  o String lastName
}

asset SampleAsset identified by assetId {
  o String assetId
  --> SampleParticipant owner
  o String value
}

transaction SampleTransaction {
  --> SampleAsset asset
  o String newValue
}

event SampleEvent {
  --> SampleAsset asset
  o String oldValue
  o String newValue
}
